version: '3.8'

services:
  auth:
    build: ../id
    container_name: 'auth'
    volumes:
      - ${certs}/:/certs
    ports:
      - "6543:443"
    environment:
      SERVER_PORT: 80
      clientId: ${clientId}
      clientSecret: ${clientSecret}
      postgresql_url: ${postgresql_url_jdbc}
      keyStore: '/certs/keystore.jks'
      keyAlias: ${sslKeyAlias}
      keyStorePassword: ${sslKeyStorePassword}
      privateKeyPassword: ${sslPrivateKeyPassword}
      tokenKeyStore: '/certs/tokenkeystore.jks'
      tokenKeyAlias: ${tokenKeyAlias}
      tokenKeyStorePassword: ${tokenKeyStorePassword}
      tokenKeyPassword: ${tokenKeyPassword}
      SSL_PORT: 443
      githubUrlProvider: ${githubUrlProvider}
      postgresql_user: ${postgresql_user}
      postgresql_password: ${postgresql_password}
    networks:
      - database
      - gateway
  gateway:
    build: ../gateway
    container_name: 'gateway'
    ports:
      - "3456:443"
    volumes:
      - ${certs}/:/certs
    environment:
      SERVER_PORT: 443
      keyStore: '/certs/keystore.jks'
      keyAlias: ${sslKeyAlias}
      keyStorePassword: ${sslKeyStorePassword}
      privateKeyPassword: ${sslPrivateKeyPassword}
      SSL_PORT: 443
    networks:
      - gateway
  point:
    build: ../point
    container_name: 'point'
    environment:
      SERVER_PORT: 80
      postgresql_url_r2dbc: ${postgresql_url_r2dbc}
      postgresql_user: ${postgresql_user}
      postgresql_password: ${postgresql_password}
      postgresql_db: ${postgresql_db}
    networks:
      - database
      - gateway
networks:
  database:
    driver: bridge
  gateway:
    driver: bridge